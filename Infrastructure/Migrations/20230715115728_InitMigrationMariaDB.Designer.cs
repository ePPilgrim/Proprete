// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Proprette.Domain.Context;

#nullable disable

namespace Proprette.Infrastructure.Migrations
{
    [DbContext(typeof(PropretteDbContext))]
    [Migration("20230715115728_InitMigrationMariaDB")]
    partial class InitMigrationMariaDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Proprette.Domain.Data.Entities.Item", b =>
                {
                    b.Property<int>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.HasKey("ItemID");

                    b.HasAlternateKey("ItemName", "ItemType");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("Proprette.Domain.Data.Entities.Location", b =>
                {
                    b.Property<int>("LocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("LocationID");

                    b.HasAlternateKey("LocationName");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Proprette.Domain.Data.Entities.SubWarehouse", b =>
                {
                    b.Property<int>("LocationID")
                        .HasColumnType("int");

                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("LocationID", "ItemID", "DateTime");

                    b.HasIndex("ItemID");

                    b.HasIndex("LocationID", "ItemID", "DateTime")
                        .IsUnique();

                    b.ToTable("SubWarehouse");
                });

            modelBuilder.Entity("Proprette.Domain.Data.Entities.Warehouse", b =>
                {
                    b.Property<int>("ItemID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("ItemID", "DateTime");

                    b.HasIndex("ItemID", "DateTime");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("Proprette.Domain.Data.Entities.SubWarehouse", b =>
                {
                    b.HasOne("Proprette.Domain.Data.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Proprette.Domain.Data.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Proprette.Domain.Data.Entities.Warehouse", b =>
                {
                    b.HasOne("Proprette.Domain.Data.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
